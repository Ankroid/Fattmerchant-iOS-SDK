<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1140"
   version = "1.7">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "591C208F206EB12F00C848DA"
               BuildableName = "Fattmerchant.framework"
               BlueprintName = "Fattmerchant"
               ReferencedContainer = "container:fattmerchant-ios-sdk.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES"
      codeCoverageEnabled = "YES">
      <PreActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "# Pipe output data to a log file&#10;exec &gt; /tmp/$PROJECT_NAME.txt 2&gt;&amp;1&#10;&#10;# Go to the dir where the source code is&#10;cd &quot;$SRCROOT&quot;&#10;&#10;echo $(date +&quot;%r&quot;): fattmerchant-ios-sdk - starting Pre-Actions for Test&#10;&#10;# Run before-build for Code Climate. This will tell Code Climate that we have&#10;# a coverage file pending. It will be built at the post-action by Slather&#10;cc-test-reporter before-build -d&#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "591C208F206EB12F00C848DA"
                     BuildableName = "Fattmerchant.framework"
                     BlueprintName = "Fattmerchant"
                     ReferencedContainer = "container:fattmerchant-ios-sdk.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PreActions>
      <PostActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Prepare test coverage data with Slather"
               scriptText = "# Pipe output data to a tmp file&#10;exec &gt; /tmp/$PROJECT_NAME.txt 2&gt;&amp;1&#10;echo $(date +&quot;%r&quot;): fattmerchant-ios-sdk - starting Post-Actions for Test&#10;cd &quot;$SRCROOT&quot;&#10;&#10;# Slather takes the coverage report and generates a Cobertura XML file. This is&#10;# a file that Code Climate can accept&#10;slather&#10;">
               <EnvironmentBuildable>
                  <BuildableReference
                     BuildableIdentifier = "primary"
                     BlueprintIdentifier = "591C208F206EB12F00C848DA"
                     BuildableName = "Fattmerchant.framework"
                     BlueprintName = "Fattmerchant"
                     ReferencedContainer = "container:fattmerchant-ios-sdk.xcodeproj">
                  </BuildableReference>
               </EnvironmentBuildable>
            </ActionContent>
         </ExecutionAction>
      </PostActions>
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "591C208F206EB12F00C848DA"
            BuildableName = "Fattmerchant.framework"
            BlueprintName = "Fattmerchant"
            ReferencedContainer = "container:fattmerchant-ios-sdk.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
      <CodeCoverageTargets>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "591C208F206EB12F00C848DA"
            BuildableName = "Fattmerchant.framework"
            BlueprintName = "Fattmerchant"
            ReferencedContainer = "container:fattmerchant-ios-sdk.xcodeproj">
         </BuildableReference>
      </CodeCoverageTargets>
      <Testables>
         <TestableReference
            skipped = "NO"
            parallelizable = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "591C209E206EB26600C848DA"
               BuildableName = "FattmerchantTests.xctest"
               BlueprintName = "FattmerchantTests"
               ReferencedContainer = "container:fattmerchant-ios-sdk.xcodeproj">
            </BuildableReference>
            <SkippedTests>
               <Test
                  Identifier = "FattmerchantIosTests">
               </Test>
            </SkippedTests>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Release"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "591C208F206EB12F00C848DA"
            BuildableName = "Fattmerchant.framework"
            BlueprintName = "Fattmerchant"
            ReferencedContainer = "container:fattmerchant-ios-sdk.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "591C208F206EB12F00C848DA"
            BuildableName = "Fattmerchant.framework"
            BlueprintName = "Fattmerchant"
            ReferencedContainer = "container:fattmerchant-ios-sdk.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
      <PostActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "UNIVERSAL_OUTPUTFOLDER=${BUILD_DIR}/${CONFIGURATION}-universal&#10;&#10;# make sure the output directory exists&#10;mkdir -p &quot;${UNIVERSAL_OUTPUTFOLDER}&quot;&#10;&#10;# Step 1. Build Device and Simulator versions&#10;xcodebuild -target &quot;${PROJECT_NAME}&quot; ONLY_ACTIVE_ARCH=NO -configuration ${CONFIGURATION} -sdk iphoneos  BUILD_DIR=&quot;${BUILD_DIR}&quot; BUILD_ROOT=&quot;${BUILD_ROOT}&quot; clean build&#10;xcodebuild -target &quot;${PROJECT_NAME}&quot; ONLY_ACTIVE_ARCH=NO -configuration ${CONFIGURATION} -sdk iphonesimulator VALID_ARCHS=&quot;x86_64 i386&quot; BUILD_DIR=&quot;${BUILD_DIR}&quot; BUILD_ROOT=&quot;${BUILD_ROOT}&quot; clean build&#10;&#10;# Step 2. Copy the framework structure to the universal folder&#10;cp -R &quot;${BUILD_DIR}/${CONFIGURATION}-iphoneos/${PROJECT_NAME}.framework&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}/&quot;&#10;&#10;# Step 3. Create universal binary file using lipo and place the combined executable in the copied framework directory&#10;lipo -create -output &quot;${UNIVERSAL_OUTPUTFOLDER}/${PROJECT_NAME}.framework/${PROJECT_NAME}&quot; &quot;${BUILD_DIR}/${CONFIGURATION}-iphonesimulator/${PROJECT_NAME}.framework/${PROJECT_NAME}&quot; &quot;${BUILD_DIR}/${CONFIGURATION}-iphoneos/${PROJECT_NAME}.framework/${PROJECT_NAME}&quot;&#10;&#10;# Step 4. Convenience step to copy the framework to the project&apos;s directory&#10;cp -R &quot;${UNIVERSAL_OUTPUTFOLDER}/${PROJECT_NAME}.framework&quot; &quot;${PROJECT_DIR}&quot;&#10;&#10;# Step 5. Delete temporary build directory in the project&apos;s directory&#10;rm -rf &quot;${PROJECT_DIR}/build&quot;&#10;&#10;# Step 6. Convenience step to open the project&apos;s directory in Finder&#10;open &quot;${PROJECT_DIR}&quot;">
            </ActionContent>
         </ExecutionAction>
      </PostActions>
   </ArchiveAction>
</Scheme>
